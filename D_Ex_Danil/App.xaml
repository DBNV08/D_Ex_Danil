<Application x:Class="D_Ex_Danil.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:D_Ex_Danil"
             StartupUri="Autorization.xaml">
    <Application.Resources>
         
    </Application.Resources>
</Application>



<!--***Связь с БД***
private static BD _context;

internal static BD GetContext()
{
if(_context == null)
_context = new BD();
return _context;
}


***Авторизация***Authorization***
var login = TextBoxLogin.Text;
var password = TextBoxPassword.Text;
var bd = new BD();
var user = bd.Users.Where(u => u.Login == login && u.Password == password).FirstOrDefault();
if (user != null)
{
new MainWindow().Show();
this.Close();
}
else
MessageBox.Show("Данные не верны", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);


***Главное окно***
public MainWindow()
{
InitializeComponent();
MainFrame.Content = new НазваниеСтраницы();
}


***Выход в окно авторизации***
private void Clous_Click(object sender, RoutedEventArgs e)
{
new Authorization().Show();
this.Close();
}


***Выход***
private void Close_Click(object sender, RoutedEventArgs e)
{
this.Close();
}


***Переход между страницами***
private void NewData_Click(object sender, RoutedEventArgs e)
{
 NavigationService.Content = new НазваниеСтраницы(null);
}










***Страница***
public partial class Data : Page
{
BD bd = new BD();

public Data()
{
InitializeComponent();
DataGrid.ItemsSource = bd.***.ToList();
}


***Обновление станицы***
IsVisibleChanged="DataUpdate"

private void DataUpdate(object sender, DependencyPropertyChangedEventArgs e)
{
if (Visibility == Visibility.Visible)
{
DataGrid.ItemsSource = BD.GetContext().***.ToList();
}
}


***Поиск***
private void TextBox_TextChanged(object sender, TextChangedEventArgs e)
{
var Poiski = bd.***.Where(w => w.ПоКакомуПолю.StartsWith(НазаниеTextBox.Text)).ToList();
if (DataGrid != null)
{
DataGrid.ItemsSource = Poiski;
}
}


***Окно Добавления и Изменения***
public partial class NawData : Page
{
BD bd = new BD();
private *** context = new ***();

public NawData(*** name)
{
InitializeComponent();
if (name != null)
{
Delit.IsEnabled = true;
context = name;
}
НазваниеComboBox.ItemsSource = BD.GetContext().НазваниеТаблицы.ToList();
НазваниеComboBox.ItemsSource = BD.GetContext().НазваниеТаблицы.ToList();
DataContext = context; 
}










***Добавление***
private void Save_Click(object sender, RoutedEventArgs e)
{
BD.GetContext().***.Add(context);
try
{
BD.GetContext().SaveChanges();
MessageBox.Show("Сохранение прошло успешно. Данные добавлены в базу", "Данные сохранены", MessageBoxButton.OK);}
catch
{
MessageBox.Show("Не все данные прописанны", "Ошибка с сохранением", MessageBoxButton.OK, MessageBoxImage.Error);
}
}

***Лист просмотра данных***
<ListView Name="ListData"  >
    <ListView.ItemTemplate>
        <DataTemplate>
            <Grid >

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Image Source="{Binding Path=Image}"/>

                <StackPanel Grid.Column="1">

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Название: "/>
                        <TextBlock Text="{Binding Path=Name}"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text=""/>
                    </StackPanel>

                </StackPanel>

                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Grid.Row="6" Grid.ColumnSpan="6">
                    <Button Margin="0,4,8,8" HorizontalAlignment="Right" Content="Удалить" Style="{StaticResource MaterialDesignFlatButton}" Click="Delit_Click"  ></Button>
                    <Button Margin="0,4,8,8" HorizontalAlignment="Right"  Content="Изменить" Style="{StaticResource MaterialDesignFlatButton}" Click="Edit_Click" ></Button>

                </StackPanel>

            </Grid>
        </DataTemplate>
    </ListView.ItemTemplate>
</ListView>



***Кнопка Изменения***
private void Izmena_Click(object sender, RoutedEventArgs e)
{
var a = (sender as Button).DataContext as ***;
NavigationService.Content = new НазваниеСтраницы(a);
}

***Удаление данных***
private void Delit_Click(object sender, RoutedEventArgs e)
{
var delete = ListData.SelectedItems.Cast
<Staff>().ToList();
if (delete != null)
{
if (MessageBox.Show($"Вы точно хотите удалить данную информацию?", "Внимание", MessageBoxButton.YesNo, MessageBoxImage.Question) == MessageBoxResult.Yes)
{
try
{
bd.***.RemoveRange(delete);
bd.SaveChanges();
MessageBox.Show("Данные из таблицы удалены", "Внимание", MessageBoxButton.OK, MessageBoxImage.Warning);
ListData.ItemsSource = BD.GetContext().***.ToList();
}
catch (Exception ex) { MessageBox.Show(ex.Message.ToString()); }
}
}
}

***Класс***
internal class Class
    {
        public static Frame MainFrame { get; set; }
    }


***Интерфейс***
WindowStyle="None"

***Кнопка назад***
private void ButtonBackClick(object sender, RoutedEventArgs e)
        {
            if (MainFrame.CanGoBack)
            {
                MainFrame.GoBack();
            }
        }
















***Фильтрация по возрастанию***
    <ComboBox Name="Vibor" DropDownClosed="Vibor_DropDownClosed">
        <TextBlock>Цена по возрастанию</TextBlock>
        <TextBlock>Цена по убыванию</TextBlock>
    </ComboBox>

    private void Vibor_DropDownClosed(object sender, EventArgs e)
{
CollectionView view = (CollectionView)CollectionViewSource.GetDefaultView(ListData.Items);

switch (НазваниеComboBox.Text)
{
case "Цена по возрастанию":
view.SortDescriptions.Clear();
view.SortDescriptions.Add(new SortDescription(nameof(Tovar.Sum), ListSortDirection.Ascending));
break;

case "Цена по убыванию":
view.SortDescriptions.Clear();
view.SortDescriptions.Add(new SortDescription(nameof(Tovar.Sum), ListSortDirection.Descending));
break;
}
}


public partial class Page3 : Page
    {
        BD bd = new BD();
        private User contex = new User();

        public Page3(User user)
        {
            InitializeComponent();
            if (user != null)
            {
                contex = user;
            }
            RoleComboBox.ItemsSource = BD.GetContext().Role.ToList();
            DataContext = contex;
        }
        private void SevData_Click(object sender, RoutedEventArgs e)
        {
            contex.UserRole = (RoleComboBox.SelectedItem as Role).ID_Role;
            try
            {
                
                BD.GetContext().User.AddOrUpdate(contex);
                BD.GetContext().SaveChanges();
                MessageBox.Show("Данные сохранены в базу данных", "Сохранение", MessageBoxButton.OK);
            }
            catch
            {
                MessageBox.Show("Не все поля имеют информацию", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
    }










public partial class Page2 : Page
    {
        BD bd = new BD();
        private User contex = new User();
        public Page2()
        {
            InitializeComponent();
            RoleComboBox.ItemsSource = BD.GetContext().Role.ToList();
            DataContext = contex;
        }

        private void SevData_Click(object sender, RoutedEventArgs e)
        {
            //contex.UserRole = (RoleComboBox.SelectedItem as Role).ID_Role;
            
            try
            {
                contex.UserRole = RoleComboBox.SelectedIndex;
                BD.GetContext().User.Add(contex);
                BD.GetContext().SaveChanges();
                MessageBox.Show("Данные сохранены в базу данных", "Сохранение", MessageBoxButton.OK);
            }
            catch 
            {
                MessageBox.Show("Не все поля имеют информацию", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
    }


DropDownClosed="Filter_DropDownClosed"

private void Filter_DropDownClosed(object sender, EventArgs e)
        {
            CollectionView view = (CollectionView)CollectionViewSource.GetDefaultView(ListData.ItemsSource);

            switch (Filter.Text)
            {
                case "Сбросить":
                    ListData.ItemsSource = BD.GetContext().User.ToList();
                    break;

                case "По возростанию":
                    view.SortDescriptions.Clear();
                    view.SortDescriptions.Add(new SortDescription(nameof(User.Familia), ListSortDirection.Ascending));
                    break;

                case "По убыванию":
                    view.SortDescriptions.Clear();
                    view.SortDescriptions.Add(new SortDescription(nameof(User.Familia), ListSortDirection.Descending));
                    break;
            }
        }-->
